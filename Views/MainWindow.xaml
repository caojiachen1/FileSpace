<ui:FluentWindow x:Class="FileSpace.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FileSpace.Views"
        xmlns:models="clr-namespace:FileSpace.Models"
        xmlns:converters="clr-namespace:FileSpace.Converters"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        mc:Ignorable="d"
        Title="FileSpace - 文件管理器" Height="700" Width="1200"
        WindowStartupLocation="CenterScreen"
        ExtendsContentIntoTitleBar="True"
        WindowBackdropType="Mica">

    <ui:FluentWindow.Resources>
        <!-- Add missing converters -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Add inverse boolean to visibility converter -->
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        
        <!-- Add equality converter for comparing objects -->
        <converters:EqualityConverter x:Key="EqualityConverter"/>
        
        <!-- Custom expand/collapse toggle style with down arrow -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Width="16" Height="16" Background="Transparent">
                            <ui:SymbolIcon x:Name="ExpandIcon" 
                                           Symbol="ChevronDown24" 
                                           FontSize="12"
                                           Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           RenderTransformOrigin="0.5,0.5">
                                <ui:SymbolIcon.RenderTransform>
                                    <RotateTransform x:Name="ExpandIconTransform" Angle="-90"/>
                                </ui:SymbolIcon.RenderTransform>
                            </ui:SymbolIcon>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ExpandIconTransform"
                                                           Storyboard.TargetProperty="Angle"
                                                           To="0"
                                                           Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ExpandIconTransform"
                                                           Storyboard.TargetProperty="Angle"
                                                           To="-90"
                                                           Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandIcon" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- TreeView Item Style for dark mode -->
        <Style x:Key="DirectoryTreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <!-- Expansion toggle button with down arrow -->
                            <ToggleButton x:Name="Expander" Grid.Column="0"
                                          ClickMode="Press"
                                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Visibility="{Binding HasSubDirectories, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            
                            <!-- Content area -->
                            <Border x:Name="ContentBorder" Grid.Column="1" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="3">
                                <ContentPresenter x:Name="PART_Header" 
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            
                            <!-- Child items -->
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"
                                            Margin="12,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ContentBorder" Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding HasSubDirectories}" Value="False">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="FileDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF404040"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF606060"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="FileDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </ui:FluentWindow.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Title Bar -->
        <ui:TitleBar Grid.Row="0" Title="FileSpace" ShowMinimize="True" ShowMaximize="True" ShowClose="True"/>

        <!-- Toolbar and Menu Bar -->
        <Grid Grid.Row="1" Background="{DynamicResource ApplicationBackgroundBrush}" Margin="10,-10,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!-- Menu Bar -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Main Menu -->
                <Menu Grid.Column="0" Background="Transparent">
            <MenuItem Header="文件(_F)">
                <MenuItem Header="搜索..." Command="{Binding ShowSearchWindowCommand}" InputGestureText="Ctrl+F">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Search24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="退出" Click="Exit_Click" InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Dismiss24"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="编辑(_E)">
                <MenuItem Header="复制" Command="{Binding CopyFilesCommand}" InputGestureText="Ctrl+C">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Copy24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="剪切" Command="{Binding CutFilesCommand}" InputGestureText="Ctrl+X">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Cut24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="粘贴" Command="{Binding PasteFilesCommand}" InputGestureText="Ctrl+V">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="ClipboardPaste24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="全选" Command="{Binding SelectAllCommand}" InputGestureText="Ctrl+A">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Apps24"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="查看(_V)">
                <MenuItem Header="刷新" Command="{Binding RefreshCommand}" InputGestureText="F5">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="ArrowClockwise24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="面板">
                    <MenuItem Header="文件夹树" Command="{Binding ToggleLeftPanelCommand}" 
                              IsCheckable="True" IsChecked="{Binding IsLeftPanelVisible}">
                        <MenuItem.Icon>
                            <ui:SymbolIcon Symbol="Folder24"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="预览面板" Command="{Binding ToggleRightPanelCommand}" 
                              IsCheckable="True" IsChecked="{Binding IsRightPanelVisible}">
                        <MenuItem.Icon>
                            <ui:SymbolIcon Symbol="Eye24"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="工具(_T)">
                <MenuItem Header="文件夹分析..." Command="{Binding AnalyzeFolderCommand}">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Folder24"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="设置..." Click="Settings_Click">
                    <MenuItem.Icon>
                        <ui:SymbolIcon Symbol="Settings24"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
            
            <!-- VS Code Style Panel Toggle Buttons -->
            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,10,0">
                <!-- Left Panel Toggle (Folder Tree) -->
                <ui:Button Command="{Binding ToggleLeftPanelCommand}" 
                           Width="32" Height="28" Margin="2,0"
                           ToolTip="切换文件夹树 (Alt+1)"
                           Background="Transparent"
                           BorderThickness="0">
                    <ui:Button.Content>
                        <Grid Width="20" Height="16">
                            <!-- VS Code style split icon with proper hollow effect -->
                            <Rectangle Width="8" Height="14" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                       RadiusX="1" RadiusY="1">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <!-- Default: hollow (panel closed) -->
                                        <Setter Property="Fill" Value="Transparent"/>
                                        <Setter Property="Stroke" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                        <Style.Triggers>
                                            <!-- Filled when panel is open -->
                                            <DataTrigger Binding="{Binding IsLeftPanelVisible}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                                <Setter Property="Stroke" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Rectangle Width="10" Height="14" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                       Fill="Transparent" Stroke="{DynamicResource TextFillColorSecondaryBrush}" 
                                       StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                        </Grid>
                    </ui:Button.Content>
                    <ui:Button.Style>
                        <Style TargetType="ui:Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ui:Button.Style>
                </ui:Button>
                
                <!-- Right Panel Toggle (Preview) -->
                <ui:Button Command="{Binding ToggleRightPanelCommand}" 
                           Width="32" Height="28" Margin="2,0"
                           ToolTip="切换预览面板 (Alt+2)"
                           Background="Transparent"
                           BorderThickness="0">
                    <ui:Button.Content>
                        <Grid Width="20" Height="16">
                            <!-- VS Code style split icon with proper hollow effect -->
                            <Rectangle Width="10" Height="14" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                       Fill="Transparent" Stroke="{DynamicResource TextFillColorSecondaryBrush}" 
                                       StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                            <Rectangle Width="8" Height="14" HorizontalAlignment="Right" VerticalAlignment="Center" 
                                       RadiusX="1" RadiusY="1">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <!-- Default: hollow (panel closed) -->
                                        <Setter Property="Fill" Value="Transparent"/>
                                        <Setter Property="Stroke" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
                                        <Setter Property="StrokeThickness" Value="1"/>
                                        <Style.Triggers>
                                            <!-- Filled when panel is open -->
                                            <DataTrigger Binding="{Binding IsRightPanelVisible}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                                <Setter Property="Stroke" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                    </ui:Button.Content>
                    <ui:Button.Style>
                        <Style TargetType="ui:Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ui:Button.Style>
                </ui:Button>
            </StackPanel>
        </Grid>

            <!-- Toolbar -->
            <Border Grid.Row="1" Background="{DynamicResource CardBackgroundFillColorDefaultBrush}" 
                    BorderBrush="{DynamicResource ControlStrokeColorSecondaryBrush}" 
                    BorderThickness="0,1,0,1" Margin="0,5,0,0" Padding="10,8">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Navigation Buttons -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <ui:Button Command="{Binding GoBackCommand}" Width="40" Height="32" Margin="0,0,4,0"
                                   ToolTip="后退 (Alt+Left)" Background="Transparent" BorderThickness="1">
                            <ui:SymbolIcon Symbol="ArrowLeft24" FontSize="16"/>
                        </ui:Button>
                        <ui:Button Command="{Binding GoForwardCommand}" Width="40" Height="32" Margin="0,0,4,0"
                                   ToolTip="前进 (Alt+Right)" Background="Transparent" BorderThickness="1">
                            <ui:SymbolIcon Symbol="ArrowRight24" FontSize="16"/>
                        </ui:Button>
                        <ui:Button Command="{Binding GoUpCommand}" Width="40" Height="32" Margin="0,0,8,0"
                                   ToolTip="向上 (Alt+Up)" Background="Transparent" BorderThickness="1">
                            <ui:SymbolIcon Symbol="ArrowUp24" FontSize="16"/>
                        </ui:Button>
                    </StackPanel>
                    
                    <!-- Address Bar -->
                    <Border Grid.Column="1" Background="{DynamicResource ControlFillColorDefaultBrush}" 
                            BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}" 
                            BorderThickness="1" CornerRadius="4" Margin="8,0">
                        <Grid>
                            <!-- Breadcrumb Navigation -->
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled"
                                          Visibility="{Binding IsPathEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                <ItemsControl ItemsSource="{Binding BreadcrumbItems}" Background="Transparent">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <ui:Button Content="{Binding Name}" 
                                                           Command="{Binding DataContext.NavigateToBreadcrumbCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                           CommandParameter="{Binding Path}"
                                                           Background="Transparent" BorderThickness="0"
                                                           Padding="8,4" FontSize="13"
                                                           ToolTip="{Binding Path}"/>
                                                <ui:SymbolIcon Symbol="ChevronRight24" FontSize="12" 
                                                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                                               VerticalAlignment="Center" Margin="2,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            
                            <!-- Editable Address Bar -->
                            <ui:TextBox x:Name="AddressBarTextBox" Text="{Binding CurrentPath, UpdateSourceTrigger=PropertyChanged}" 
                                        Background="Transparent" BorderThickness="0"
                                        Visibility="{Binding IsPathEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        KeyDown="AddressBarTextBox_KeyDown"/>
                        </Grid>
                    </Border>
                    
                    <!-- Search and View Options -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                        <ui:TextBox x:Name="SearchTextBox" PlaceholderText="搜索..." Width="200" Margin="8,0"
                                    Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                            <ui:TextBox.Icon>
                                <ui:SymbolIcon Symbol="Search24"/>
                            </ui:TextBox.Icon>
                        </ui:TextBox>
                        
                        <!-- View Mode Dropdown -->
                        <ui:Button Width="80" Height="32" Margin="4,0,0,0" Background="Transparent" BorderThickness="1"
                                   ToolTip="查看选项">
                            <ui:Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <ui:SymbolIcon Symbol="Grid24" FontSize="14" Margin="0,0,4,0"/>
                                    <TextBlock Text="视图" FontSize="12" VerticalAlignment="Center"/>
                                    <ui:SymbolIcon Symbol="ChevronDown24" FontSize="10" Margin="4,0,0,0"/>
                                </StackPanel>
                            </ui:Button.Content>
                            <ui:Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="详细信息" Command="{Binding SetViewModeCommand}" CommandParameter="详细信息">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="TextBulletListSquare24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="大图标" Command="{Binding SetViewModeCommand}" CommandParameter="大图标">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Grid24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="中等图标" Command="{Binding SetViewModeCommand}" CommandParameter="中等图标">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Apps24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="小图标" Command="{Binding SetViewModeCommand}" CommandParameter="小图标">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="AppsList24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="按名称排序" Command="{Binding SetSortModeCommand}" CommandParameter="Name">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="TextSortAscending24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="按大小排序" Command="{Binding SetSortModeCommand}" CommandParameter="Size">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="DataUsage24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="按类型排序" Command="{Binding SetSortModeCommand}" CommandParameter="Type">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="DocumentBulletList24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="按修改日期排序" Command="{Binding SetSortModeCommand}" CommandParameter="Date">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Calendar24"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ui:Button.ContextMenu>
                            <ui:Button.Style>
                                <Style TargetType="ui:Button">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                                        </Trigger>
                                        <EventTrigger RoutedEvent="Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:Button.Style>
                        </ui:Button>
                    </StackPanel>
                </Grid>
            </Border>
            
            <!-- Quick Access Toolbar -->
            <Border Grid.Row="2" Background="{DynamicResource SubtleFillColorSecondaryBrush}" 
                    Margin="0,5,0,0" Padding="10,6" CornerRadius="4">
                <StackPanel Orientation="Horizontal">
                    <ui:Button Command="{Binding CopyFilesCommand}" Background="Transparent" BorderThickness="0"
                               ToolTip="复制 (Ctrl+C)" Margin="0,0,4,0" Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Copy24" FontSize="14" Margin="0,0,4,0"/>
                            <TextBlock Text="复制" FontSize="12"/>
                        </StackPanel>
                    </ui:Button>
                    
                    <ui:Button Command="{Binding PasteFilesCommand}" Background="Transparent" BorderThickness="0"
                               ToolTip="粘贴 (Ctrl+V)" Margin="0,0,4,0" Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="ClipboardPaste24" FontSize="14" Margin="0,0,4,0"/>
                            <TextBlock Text="粘贴" FontSize="12"/>
                        </StackPanel>
                    </ui:Button>
                    
                    <ui:Button Command="{Binding DeleteFilesCommand}" Background="Transparent" BorderThickness="0"
                               ToolTip="删除 (Delete)" Margin="0,0,4,0" Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Delete24" FontSize="14" Margin="0,0,4,0"/>
                            <TextBlock Text="删除" FontSize="12"/>
                        </StackPanel>
                    </ui:Button>
                    
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Margin="8,0"/>
                    
                    <ui:Button Command="{Binding CreateNewFolderCommand}" Background="Transparent" BorderThickness="0"
                               ToolTip="新建文件夹" Margin="0,0,4,0" Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="FolderAdd24" FontSize="14" Margin="0,0,4,0"/>
                            <TextBlock Text="新建文件夹" FontSize="12"/>
                        </StackPanel>
                    </ui:Button>
                    
                    <ui:Button Command="{Binding ShowPropertiesCommand}" Background="Transparent" BorderThickness="0"
                               ToolTip="属性" Margin="0,0,4,0" Padding="8,4">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Settings24" FontSize="14" Margin="0,0,4,0"/>
                            <TextBlock Text="属性" FontSize="12"/>
                        </StackPanel>
                    </ui:Button>
                </StackPanel>
            </Border>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="2" Margin="10,0" x:Name="MainContentGrid">
            <Grid.ColumnDefinitions>
                <!-- Left Panel (Directory Tree) -->
                <ColumnDefinition x:Name="LeftPanelColumn" Width="250" MinWidth="0"/>
                <!-- Shared Left Splitter -->
                <ColumnDefinition x:Name="LeftSplitterColumn" Width="Auto" MinWidth="0"/>
                <!-- Center Panel (File List) - Always visible, takes remaining space -->
                <ColumnDefinition x:Name="CenterPanelColumn" Width="*"/>
                <!-- Shared Right Splitter -->
                <ColumnDefinition x:Name="RightSplitterColumn" Width="Auto" MinWidth="0"/>
                <!-- Right Panel (Preview) -->
                <ColumnDefinition x:Name="RightPanelColumn" Width="300" MinWidth="0"/>
            </Grid.ColumnDefinitions>

            <!-- Left Panel - Quick Access & Directory Tree -->
            <Border Grid.Column="0" Background="{DynamicResource ApplicationBackgroundBrush}" 
                    BorderBrush="{DynamicResource ControlStrongStrokeColorDefaultBrush}" 
                    BorderThickness="1,1,0,1" CornerRadius="8,0,0,8"
                    Visibility="{Binding IsLeftPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Quick Access Section -->
                    <StackPanel Grid.Row="0" Margin="10,10,10,0" HorizontalAlignment="Stretch">
                        <TextBlock Text="快速访问" FontWeight="Bold" FontSize="13" Margin="0,0,0,8" 
                                   Foreground="{DynamicResource TextFillColorPrimaryBrush}" HorizontalAlignment="Left"/>
                        
                        <!-- Quick Access Items -->
                        <ListView ItemsSource="{Binding QuickAccessItems}" 
                                  Background="Transparent" BorderThickness="0"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                  SelectionMode="Single"
                                  HorizontalAlignment="Stretch"
                                  Width="Auto">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Background="Transparent" 
                                          MouseLeftButtonUp="QuickAccessItem_MouseLeftButtonUp"
                                          Tag="{Binding Path}">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" 
                                                    Margin="8,4">
                                            <ui:SymbolIcon Symbol="{Binding Icon}" Margin="0,0,8,0" FontSize="16"
                                                           Foreground="{Binding IconColor}" VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                       Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0,1"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListViewItem">
                                                <Border Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Padding="{TemplateBinding Padding}"
                                                        CornerRadius="3">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource AccentFillColorDefaultBrush}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextOnAccentFillColorPrimaryBrush}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </StackPanel>
                    
                    <!-- Separator -->
                    <Separator Grid.Row="1" Margin="10,8" Background="{DynamicResource ControlStrokeColorSecondaryBrush}"/>
                    
                    <!-- This PC Section Header -->
                    <TextBlock Grid.Row="2" Text="此电脑" FontWeight="Bold" FontSize="13" Margin="10,0,10,8" 
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                    
                    <!-- Directory Tree -->
                    <TreeView Grid.Row="3" x:Name="DirectoryTreeView" 
                              Background="Transparent" BorderThickness="0" Margin="0,0,0,10"
                              ItemsSource="{Binding DirectoryTree}"
                              SelectedItemChanged="DirectoryTreeView_SelectedItemChanged"
                              ItemContainerStyle="{StaticResource DirectoryTreeViewItemStyle}">
                        <TreeView.Resources>
                            <!-- Add BooleanToVisibilityConverter -->
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                        </TreeView.Resources>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding SubDirectories}">
                                <StackPanel Orientation="Horizontal">
                                    <!-- Colorful folder icon -->
                                    <ui:SymbolIcon Symbol="Folder24" Margin="0,0,5,0" 
                                                   Foreground="#FFE6A23C"/>
                                    
                                    <!-- Directory name -->
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                               Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                                    
                                    <!-- Loading indicator with color -->
                                    <ui:ProgressRing Width="14" Height="14" Margin="5,0,0,0"
                                                     IsIndeterminate="True"
                                                     Foreground="#FF409EFF"
                                                     Visibility="{Binding IsLoadingChildren, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    
                                    <!-- Error indicator -->
                                    <ui:SymbolIcon Symbol="ErrorCircle24" Margin="5,0,0,0" 
                                                   Foreground="#FFF56C6C" 
                                                   Width="14" Height="14"
                                                   Visibility="{Binding HasLoadError, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   ToolTip="{Binding LoadErrorMessage}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" 
                          Background="{DynamicResource ControlStrongStrokeColorDefaultBrush}"
                          DragCompleted="LeftGridSplitter_DragCompleted">
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <!-- Hide when left panel is hidden -->
                            <DataTrigger Binding="{Binding IsLeftPanelVisible}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>

            <!-- Center Panel - File List (Always visible) -->
            <Border Grid.Column="2" Background="{DynamicResource ApplicationBackgroundBrush}" 
                    BorderBrush="{DynamicResource ControlStrongStrokeColorDefaultBrush}">
                <Border.Style>
                    <Style TargetType="Border">
                        <!-- Default style when both panels are visible -->
                        <Setter Property="BorderThickness" Value="0,1,0,1"/>
                        <Setter Property="CornerRadius" Value="0"/>
                        <Style.Triggers>
                            <!-- Left panel hidden, right panel visible -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsLeftPanelVisible}" Value="False"/>
                                    <Condition Binding="{Binding IsRightPanelVisible}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" Value="1,1,0,1"/>
                                <Setter Property="CornerRadius" Value="8,0,0,8"/>
                            </MultiDataTrigger>
                            <!-- Left panel visible, right panel hidden -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsLeftPanelVisible}" Value="True"/>
                                    <Condition Binding="{Binding IsRightPanelVisible}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" Value="0,1,1,1"/>
                                <Setter Property="CornerRadius" Value="0,8,8,0"/>
                            </MultiDataTrigger>
                            <!-- Both panels hidden (center only) -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsLeftPanelVisible}" Value="False"/>
                                    <Condition Binding="{Binding IsRightPanelVisible}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="CornerRadius" Value="8"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <!-- File List -->
                    <ui:DataGrid x:Name="FileDataGrid" 
                                 ItemsSource="{Binding Files}"
                                 SelectedItem="{Binding SelectedFile}"
                                 Background="Transparent" BorderThickness="0"
                                 Margin="10,5,10,10"
                                 MouseDoubleClick="FileListView_MouseDoubleClick"
                                 MouseDown="FileListView_MouseDown"
                                 SelectionChanged="FileListView_SelectionChanged"
                                 KeyDown="FileListView_KeyDown"
                                 AutoGenerateColumns="False"
                                 HeadersVisibility="Column"
                                 GridLinesVisibility="None"
                                 CanUserAddRows="False"
                                 CanUserDeleteRows="False"
                                 CanUserReorderColumns="True"
                                 CanUserResizeColumns="True"
                                 CanUserResizeRows="False"
                                 CanUserSortColumns="True"
                                 IsReadOnly="True"
                                 RowStyle="{StaticResource FileDataGridRowStyle}"
                                 CellStyle="{StaticResource FileDataGridCellStyle}">
                        <ui:DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="打开" Click="ContextMenu_Open">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Open24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="在资源管理器中查看" Command="{Binding OpenInExplorerCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="FolderOpen24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="重命名" Command="{Binding StartRenameCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Edit24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="复制" Command="{Binding CopyFilesCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Copy24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="剪切" Command="{Binding CutFilesCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Cut24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="粘贴" Command="{Binding PasteFilesCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="ClipboardPaste24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="删除" Command="{Binding DeleteFilesCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Delete24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Command="{Binding CopyFilePathCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Link24"/>
                                    </MenuItem.Icon>
                                    <MenuItem.Style>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Header" Value="复制文件地址"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedFile.IsDirectory}" Value="True">
                                                    <Setter Property="Header" Value="复制文件夹地址"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                                <MenuItem Header="属性" Command="{Binding ShowPropertiesCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Settings24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="分析文件夹" Command="{Binding AnalyzeFolderCommand}" Visibility="{Binding SelectedFile.IsDirectory, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Folder24"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ui:DataGrid.ContextMenu>
                        <ui:DataGrid.Columns>
                            <DataGridTemplateColumn Header="名称" Width="200" SortMemberPath="Name">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <!-- Normal display -->
                                            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                                                       Visibility="{Binding DataContext.IsRenaming, RelativeSource={RelativeSource AncestorType=ui:DataGrid}, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                                                <ui:SymbolIcon Symbol="{Binding Icon}" Margin="0,0,5,0" 
                                                               Foreground="{Binding IconColor}"/>
                                                <TextBlock Text="{Binding DisplayName}" 
                                                           TextTrimming="CharacterEllipsis"
                                                           TextAlignment="Left"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           ToolTip="{Binding Name}"/>
                                            </StackPanel>
                                            
                                            <!-- Rename mode -->
                                            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                                                       Visibility="{Binding DataContext.IsRenaming, RelativeSource={RelativeSource AncestorType=ui:DataGrid}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ui:SymbolIcon Symbol="{Binding Icon}" Margin="0,0,5,0" 
                                                               Foreground="{Binding IconColor}"/>
                                                <Grid>
                                                    <!-- Show original name if not the item being renamed -->
                                                    <TextBlock Text="{Binding DisplayName}"
                                                               TextTrimming="CharacterEllipsis"
                                                               TextAlignment="Left"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               ToolTip="{Binding Name}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Value="True">
                                                                        <DataTrigger.Binding>
                                                                            <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                                                <Binding/>
                                                                                <Binding Path="DataContext.RenamingFile" RelativeSource="{RelativeSource AncestorType=ui:DataGrid}"/>
                                                                            </MultiBinding>
                                                                        </DataTrigger.Binding>
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    
                                                    <!-- Show textbox for the item being renamed -->
                                                    <ui:TextBox x:Name="RenameTextBox" 
                                                               Text="{Binding DataContext.NewFileName, RelativeSource={RelativeSource AncestorType=ui:DataGrid}, UpdateSourceTrigger=PropertyChanged}"
                                                               KeyDown="RenameTextBox_KeyDown"
                                                               LostFocus="RenameTextBox_LostFocus"
                                                               Loaded="RenameTextBox_Loaded">
                                                        <ui:TextBox.Style>
                                                            <Style TargetType="ui:TextBox">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Value="True">
                                                                        <DataTrigger.Binding>
                                                                            <MultiBinding Converter="{StaticResource EqualityConverter}">
                                                                                <Binding/>
                                                                                <Binding Path="DataContext.RenamingFile" RelativeSource="{RelativeSource AncestorType=ui:DataGrid}"/>
                                                                            </MultiBinding>
                                                                        </DataTrigger.Binding>
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ui:TextBox.Style>
                                                    </ui:TextBox>
                                                </Grid>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="大小" Width="100" Binding="{Binding SizeString}" SortMemberPath="Size"/>
                            <DataGridTextColumn Header="类型" Width="100" Binding="{Binding Type}" SortMemberPath="Type"/>
                            <DataGridTextColumn Header="修改时间" Width="150" Binding="{Binding ModifiedTime}" SortMemberPath="ModifiedTime"/>
                        </ui:DataGrid.Columns>
                    </ui:DataGrid>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch" 
                          Background="{DynamicResource ControlStrongStrokeColorDefaultBrush}"
                          DragCompleted="RightGridSplitter_DragCompleted">
                <GridSplitter.Style>
                    <Style TargetType="GridSplitter">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <!-- Hide when right panel is hidden -->
                            <DataTrigger Binding="{Binding IsRightPanelVisible}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GridSplitter.Style>
            </GridSplitter>

            <!-- Right Panel - File Preview -->
            <Border Grid.Column="4" Background="{DynamicResource ApplicationBackgroundBrush}" 
                    BorderBrush="{DynamicResource ControlStrongStrokeColorDefaultBrush}" 
                    BorderThickness="0,1,1,1" CornerRadius="0,8,8,0"
                    Visibility="{Binding IsRightPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Size Calculation Progress -->
                    <StackPanel Grid.Row="0" Margin="10,10,10,5" 
                                Visibility="{Binding IsSizeCalculating, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ui:ProgressRing IsIndeterminate="True" Width="20" Height="20" Margin="0,0,0,5"/>
                        <TextBlock Text="{Binding SizeCalculationProgress}" FontSize="11"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                   TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                    
                    <ScrollViewer Grid.Row="1" x:Name="PreviewScrollViewer" Margin="10">
                        <!-- Loading Overlay -->
                        <Grid>
                            <ContentPresenter Content="{Binding PreviewContent}"/>
                            
                            <!-- Loading Indicator with better styling -->
                            <Border Background="#80000000" 
                                    Visibility="{Binding IsPreviewLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    CornerRadius="5">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ui:ProgressRing IsIndeterminate="True" Width="40" Height="40" Margin="0,0,0,10"/>
                                    <TextBlock Text="正在加载预览..." Foreground="White" HorizontalAlignment="Center" FontSize="14"/>
                                    <TextBlock Text="大文件可能需要较长时间..." Foreground="LightGray" HorizontalAlignment="Center" FontSize="11" Margin="0,5,0,0"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>

        <!-- Enhanced Status Bar -->
        <Border Grid.Row="3" Background="{DynamicResource CardBackgroundFillColorDefaultBrush}" 
                BorderBrush="{DynamicResource ControlStrokeColorSecondaryBrush}" 
                BorderThickness="0,1,0,0" Height="32">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Left side - File count and selection info -->
                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="15,0">
                    <TextBlock Text="{Binding StatusText}" 
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}" 
                               VerticalAlignment="Center"/>
                    
                    <!-- Selected files info -->
                    <TextBlock Text="{Binding SelectedFilesInfo}" Margin="20,0,0,0"
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               VerticalAlignment="Center"
                               Visibility="{Binding HasSelectedFiles, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    
                    <!-- File operation progress -->
                    <StackPanel Orientation="Horizontal" Margin="20,0,0,0"
                                Visibility="{Binding IsFileOperationInProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <ProgressBar Value="{Binding FileOperationProgress}" 
                                     Width="100" Height="16" Margin="0,0,10,0"
                                     VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding FileOperationStatus}" 
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
                
                <!-- Right side - View info and current directory info -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,15,0">
                    <!-- Current view mode -->
                    <TextBlock Text="{Binding ViewMode}" 
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               VerticalAlignment="Center" Margin="0,0,15,0"/>
                    
                    <!-- Size calculation progress -->
                    <TextBlock Text="{Binding SizeCalculationProgress}" 
                               Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                               VerticalAlignment="Center"
                               Visibility="{Binding IsSizeCalculating, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</ui:FluentWindow>